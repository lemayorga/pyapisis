

DROP DATABASE IF EXISTS DBSisTemplate1;
CREATE DATABASE IF NOT EXISTS DBSisTemplate1;

--###############################################################################################
-- commun
--###############################################################################################

CREATE SCHEMA IF NOT EXISTS commun;

CREATE TABLE IF NOT EXISTS commun.catalogue 
(
	id serial NOT NULL,
	"group" varchar(80) NOT NULL,
	value varchar(80) NOT NULL,
	is_active bool NOT NULL DEFAULT true,
	description varchar(255) NULL,
	CONSTRAINT catalogue_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS commun.company
(
	id serial NOT NULL,
	"name" varchar(150) NOT NULL,
	is_active bool NOT NULL DEFAULT true,
	"companySuccessorId" int4 NULL,
	CONSTRAINT company_pkey PRIMARY KEY (id)
);
CREATE INDEX IF NOT EXISTS company_name_key ON commun.company USING btree (name);


--###############################################################################################
-- Seguridad
--###############################################################################################

CREATE SCHEMA IF NOT EXISTS "security";

CREATE TABLE IF NOT EXISTS  security.rol (
	id int NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	cod_rol varchar(100) NOT null,
	rol_name varchar(100) NOT NULL,
	CONSTRAINT "Rol_pkey" PRIMARY KEY (id)
);


CREATE TABLE IF NOT EXISTS security.permission (
	id int NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	name varchar(550) NOT NULL,
	is_active bool NOT NULL DEFAULT true,
	id_higher_permission int NULL,
	orden int  NULL,
	icon varchar(80) NULL,
	url varchar(500) NULL,
	CONSTRAINT "PK_permission" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS security.user (
	id int NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	username varchar(80) NOT NULL,
	firstname varchar(100) NOT NULL,
	lastname varchar(100) NOT NULL,
	password text NOT NULL,
	email varchar(150) NOT NULL,
	is_active bool NOT NULL DEFAULT true,
	CONSTRAINT "PK_user" PRIMARY KEY (id)
);


CREATE TABLE IF NOT EXISTS security.usersroles (
	id int NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	id_user int NOT NULL,
	id_rol int NOT NULL,
	CONSTRAINT "PK_usersroles" PRIMARY KEY (id, id_user, id_rol)
);

ALTER TABLE security.usersroles ADD CONSTRAINT "FK_usersroless_rol" FOREIGN KEY (id_rol) REFERENCES security.rol(id) ON DELETE CASCADE;
ALTER TABLE security.usersroles ADD CONSTRAINT "FK_usersroles_user" FOREIGN KEY (id_user) REFERENCES security.user(id) ON DELETE CASCADE;